// this is the home page for an individual team
import { type NextPage } from "next";
import Head from "next/head";
import { useRouter } from 'next/router';
import Link from 'next/link';
import { GetServerSideProps } from 'next'
import { useEffect, useState } from "react";


type Data = { 
  id:number;
  name:string;
 }

const teamHome: NextPage = (props) => {
  const router = useRouter()
  const teamId = router.query.teamId
  const teamName = router.query.name
  const leagueId = router.query.leagueId
  const leagueName = router.query.leagueName
  const [team,setTeam] = useState([])
  const [players,setPlayers] = useState([])
  // const [scores,setScores] = useState([])
  //client side call to DB for team data
  useEffect(() => {
    if(teamId && leagueId !== undefined){
      //team data
    fetch(`/api/teamSearch/${teamId}/${leagueId}`)
    .then((res)  => 
      res.json()
    )
    .then((data) =>{ 
      setTeam(data['team'])
      console.log(data,'team search api')
    })
    
    
    // if player model coulse have multiple team need to also check league id or include league it in session storage.
    fetch(`/api/playerSearch/${leagueId}/${teamId}`)
    .then((res)  =>  
      res.json()
    )
    .then((data) =>{ 
      if (data['players'].length < 1){
        console.log('no players')
        setPlayers([{
          id:-1,
          teamId:-1,
          name:'No players',
          handicap:-1,
          Scores:[]
        }])
      }if (data['players'].length >1){
      console.log(data['players'],'player search api')
      setPlayers(data['players'])
      }
    }).catch((err)=>{
      console.log(err)
      setPlayers([{
        id:-1,
        teamId:-1,
        name:'No players',
        handicap:-1,
        Scores:[]
      }])
    })
    }

  },[teamId])  
  if (!team) {
    return <h1>Sorry we had a problem finding that team</h1>
  }
  //TODO: this needs to list the players on the selected team and link to there page
  return (
    <>
    <Head>
    <title>Golf team {teamName}</title>
    <meta name="description" content="Generated by create-t3-app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
  <main>
        <h1 className=" sm:m-2 sm:text-xl sm:flex sm:justify-center"> {teamName}</h1>
        <div className="sm:h-1/2 sm:w-12/12 sm:flex sm:justify-center">
           <ul className="sm:flex sm:flex-col sm:justify-center">
                <div className="sm:flex sm:justify-center">
              <li className="sm:flex sm:border sm:cursor-pointer sm:hover:bg-sky-700 sm:justify-center sm:m-3 sm:p-3" key={team.id}>
                 Team: {team.name} id: {team.id}</li>
               
                </div>            
           </ul>
           
           </div>
           <div>
            <ul className="sm:flex sm:justify-center">
              {
              players.map(player=> (
                <div key={player.id}  className="sm:flex sm:flex-col sm:justify-center sm:w-1/5 sm:border-2 sm:m-4">
                  <Link className="sm:w-full sm:flex sm:justify-center" key={player.id}   href={`/playerHome/${leagueName}/${leagueId}/${player.name}?name=${player.name}&id=${player.id}`}>
                  <p key={player.id}>{player.name}, HC: {player.handicap}</p>
                  </Link>
                  <div className="sm:flex sm:justify-center sm:flex-col ">
                    <p className="sm:flex sm:justify-center">Recent Scores:</p>
                  {player.Scores.map(scores => (
                    <li  key={scores.score} className="sm:flex sm:justify-center">{scores.score}</li>
                  ))}
                </div>
                </div>
              ))
              }
            </ul>
           
           </div>
  </main>
        </>
  )
}

export default teamHome;